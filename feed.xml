<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rajat Singla</title>
    <description>Hi there, Welcome to rajat's blog. You will find blogs here on ror,emberjs,deployment ,some cool programming stuff and my new findings. Currently i am working on soldier2ndlife(a product of navyug) a portal to help retired veterans.To get my attention send me a paradox. :)
</description>
    <link>http://rajatsingla.in/</link>
    <atom:link href="http://rajatsingla.in/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 17 Mar 2017 00:18:40 +0530</pubDate>
    <lastBuildDate>Fri, 17 Mar 2017 00:18:40 +0530</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Given an Array, find number of subsets with K elements, where absolute difference between the maximum and mininmum element is at most X</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;p&gt;Given an Array consisting of N integers, we need to find the number of subsets of this Array of size K, where Absolute difference between the Maximum and Minimum element of the subset is at most X.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h2 id=&quot;explanation&quot;&gt;Explanation&lt;/h2&gt;
&lt;p&gt;Lets say given Array is &lt;code class=&quot;highlighter-rouge&quot;&gt;[4 5 1 3 2]&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;K=3&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;X=5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;number of subsets satisfying given conditions will be &lt;code class=&quot;highlighter-rouge&quot;&gt;10&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One of the subset is &lt;code class=&quot;highlighter-rouge&quot;&gt;[1 2 5]&lt;/code&gt; having K elements and absolute difference between minimum and maximum element
less then X i.e &lt;code class=&quot;highlighter-rouge&quot;&gt;5-1&amp;lt;X&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;This problem comes under easy-medium level.                &lt;br /&gt;
Formally a k-combination of a set S is a subset of k distinct elements of S&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;First sort the Array     &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[1 2 3 4 5]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Fix the first element.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then traverse the array, counting elements whose  difference with fixed element is less than or equal to X.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Calculate K-1 combinations of (counted elements - fixed element’s index), if (counted elements - fixed element’s index) is greater then &lt;code class=&quot;highlighter-rouge&quot;&gt;k-1&lt;/code&gt; .   &lt;br /&gt;
 &lt;code class=&quot;highlighter-rouge&quot;&gt;K-1&lt;/code&gt; because one element is fixed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fix the next element and repeat from step 3.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Repeat above step &lt;code class=&quot;highlighter-rouge&quot;&gt;length(array)-1&lt;/code&gt; times.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;psuedo-code&quot;&gt;Psuedo code&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# this function calulates r combinations of n elements&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ncr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;given_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;for-large-arrays-using-modulo&quot;&gt;For large arrays using modulo&lt;/h2&gt;
&lt;p&gt;For arrays small than 20 elemets we can find combinations directly
&lt;code class=&quot;highlighter-rouge&quot;&gt;nCr = n! / (r! * (n-r)!)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For arrays large than 20 elements finding combinations goes out of integer limit. So we have to calculate nCr modulo M&lt;/p&gt;

&lt;p&gt;If we have to calcuate nCr mod p(where p is a prime), we can calculate factorial mod p and then use modular inverse to find nCr mod p. If we have to find nCr mod m(where m is not prime), we can factorize m into primes and then use Chinese Remainder Theorem(CRT) to find nCr mod m.&lt;/p&gt;

&lt;p&gt;For more info on calculating nCr for large numbers&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://comeoncodeon.wordpress.com/category/algorithm/&quot; target=&quot;_blank&quot;&gt;All nCr calculation methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 16 Mar 2017 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/ruby/2017/03/16/number-of-subsets-with-given-condition.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/ruby/2017/03/16/number-of-subsets-with-given-condition.html</guid>
        
        <category>problem</category>
        
        <category>number theory</category>
        
        <category>algorithm</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Automated testing of google autocomplete using cucumber and capybara</title>
        <description>&lt;p&gt;Ruby script for automated testing of google autocomplete in HTML form using cucumber and capybara.    &lt;br /&gt;
Add the following script for google autocomplete.
&lt;!--more--&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;google_autocomplete.feature&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;S1&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;And&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autocomplete&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;google_autocomplete.rb&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fill_google_autocomplete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;delhi&quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;native&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:arrow_down&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;native&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Then&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^I fill google autocomplete$/&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill_google_autocomplete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#location-div&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Tue, 14 Mar 2017 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/ruby/2017/03/14/google-autocomplete-capybara-cucumber.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/ruby/2017/03/14/google-autocomplete-capybara-cucumber.html</guid>
        
        <category>ruby</category>
        
        <category>capybara</category>
        
        <category>google</category>
        
        <category>cucumber</category>
        
        <category>automation</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>How to manage assets in rails, Difference between app, vendor and lib assets, what is asset pipeline?</title>
        <description>&lt;h2 id=&quot;what-is-assets-pipeline&quot;&gt;What is assets pipeline?&lt;/h2&gt;
&lt;p&gt;In rails asset pipeline offers tools and mechanism to manage assets i.e.
JavaScript, css, image, video files. Using it you can pre-process(coffeescript,sass), compress, minify and prepare assets for use by browsers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems solved by it&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Asset pipeline solves problem of multiple requests for each asset by compressing and compiling all alike files into one master file.
&lt;!--more--&gt;&lt;/li&gt;
  &lt;li&gt;Problem of caching by adding a hash of content into the name so that browser knows when to request a new copy of file.&lt;/li&gt;
  &lt;li&gt;Languages such as coffeescript, sass, Erb can be easily used in rails because of pre-processers provided.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;asset-organization-difference-between-app-vendor-and-lib-assets&quot;&gt;Asset Organization (Difference between app, vendor and lib assets)&lt;/h2&gt;
&lt;p&gt;Assets can be placed inside an application in one of three locations:
app/assets, lib/assets or vendor/assets.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;app/assets is for assets that are owned by the application, such as custom images, JavaScript files or stylesheets.&lt;/li&gt;
  &lt;li&gt;lib/assets is for your own libraries’ code that doesn’t really fit into the scope of the application.&lt;/li&gt;
  &lt;li&gt;vendor/assets is for assets that are owned by outside entities, such as code for JavaScript plugins and CSS frameworks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: js files under app/assets will be compiled to app.js
and js files under vendor/assets to vendor.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Order in which js files are compiled is same as files are imported in application.js&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// In application.js&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//= require jquery&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//= require jquery_ujs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//= require_tree .&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//= require_tree ./components&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//= require_self&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Make seperate folders for image,js,css files under assets folder and keep your files in respective folder. All your assets will be precompiled to public/assets from which they are served as static assets by the web server. The files in app/assets are never served directly in production.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# Image assets&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;javascripts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Custom Javascript/coffeescript&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stylesheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Custom CSS/Sass&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;javascripts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Javascript libraries, etc.&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stylesheets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Vendor themes, javascript library theme&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;Rails provide helpers to use assets in your erb files Ex.  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;.class { background-image: url(&amp;lt;%= asset_path 'image.png' %&amp;gt;) }&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;how-to-precompile-assets&quot;&gt;How to precompile assets&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In development mode, rails automatically precompiles assets on the go.   &lt;br /&gt;
In development mode assets are served as separate files in the order they are specified in the &lt;code class=&quot;highlighter-rouge&quot;&gt;application.js&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To use in Production you need to precompile assets by the following rake task. &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec rake assets:precompile&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;css-and-js-used-for-only-one-of-the-page-in-application-cant-compile-in-app-or-vendorjs-where-to-keep-these-files&quot;&gt;css and js used for only one of the page in application, can’t compile in app or vendor.js. Where to keep these files?&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rails.application.config.assets.precompile += %w( some-other-file.js even-another.css )&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Files you don’t want to compile to a common file can be compiled seperately by adding them seperately in asset pipeline array and these files can now be used in erb files of that one particular page, like this     &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script src=&quot;&amp;lt;%= asset_path 'some-other-file.js' %&amp;gt;&quot;&amp;gt;&amp;lt;script/&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;source&quot;&gt;source&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://launchschool.com/blog/rails-asset-pipeline-best-practices&quot; title=&quot;asset pipeline best practices&quot; target=&quot;_blank&quot;&gt;Asset pipeline best practices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://guides.rubyonrails.org/asset_pipeline.html&quot; title=&quot;rails guide&quot; target=&quot;_blank&quot;&gt;Rails guide on asset pipeline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/rails/2016/12/26/manage-assets-diff-btw-app-vendor-lib.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/rails/2016/12/26/manage-assets-diff-btw-app-vendor-lib.html</guid>
        
        <category>rails</category>
        
        <category>assets</category>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>Difference between Vanilla.js, JavaScript, ECMAScript, ember.js, node.js</title>
        <description>&lt;h2 id=&quot;vanillajs&quot;&gt;Vanilla.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://vanilla-js.com/&quot; target=&quot;_blank&quot;&gt;Vanilla.js&lt;/a&gt; is nothing but a name given to the &lt;strong&gt;practice of using plain JavaScript&lt;/strong&gt;
without any additional JavaScript libraries as a mockery to remind
framework lovers that many things can be done without the need for additional JavaScript
libraries.&lt;br /&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;ecmascript&quot;&gt;ECMAScript&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript&quot; target=&quot;_blank&quot;&gt;ECMAScript&lt;/a&gt; is a &lt;strong&gt;standard followed by JavaScript language&lt;/strong&gt;.
ECMAScript is standardized by Ecma International in ECMA-262, So that every browser follows this standard.
There is no compiler out there that would run ECMAScript,
and I believe JavaScript is considered the Language which implements a standard called ECMAScript. &lt;br /&gt;
&lt;strong&gt;Latest released edition of es is ES6&lt;/strong&gt;, adds significant new syntax for writing complex applications.&lt;br /&gt;
Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;today&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;how&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lukehoban/es6features&quot; title=&quot;es6 features&quot; target=&quot;_blank&quot;&gt;all es6 features&lt;/a&gt; &lt;br /&gt;
For browsers that do not suppport es6 you can use babel to transpile code to es5.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;javascript&quot;&gt;JavaScript&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics&quot; target=&quot;_blank&quot;&gt;JavaScript&lt;/a&gt; is a high-level, dynamic, untyped, and interpreted programming language&lt;/strong&gt;.
It has been standardized in the ECMAScript language specification.
Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production;
the majority of websites employ it, and all modern Web browsers support it without the need for plug-ins.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;emberjs&quot;&gt;ember.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://emberjs.com/&quot; target=&quot;_blank&quot;&gt;Ember&lt;/a&gt; or react.js or angular.js are &lt;strong&gt;open-source JavaScript web frameworks&lt;/strong&gt; to make ambitious app.
Based on the Model–view–viewmodel (MVVM) pattern. It(Ember) allows developers to create
scalable single-page web applications by incorporating common idioms and best practices into the framework.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;nodejs&quot;&gt;node.js&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Node.js&quot; target=&quot;_blank&quot;&gt;node.js&lt;/a&gt; is a &lt;strong&gt;JavaScript runtime&lt;/strong&gt; built on chrome’s
&lt;a href=&quot;https://en.wikipedia.org/wiki/V8_(JavaScript_engine)&quot; target=&quot;_blank&quot;&gt;v8 engine&lt;/a&gt;.
It is used to run JavaScript on server side and for developing various type of tools and applications.
Node.js has an event-driven architecture capable of asynchronous I/O.
These design choices aim to optimize throughput and scalability in Web applications with many input/output operations,
as well as for real-time Web applications (e.g., real-time communication programs and browser games).
express.js is a web framework for node.js&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Dec 2016 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/javascript/2016/12/20/diff-btw-vanilla-js-es-emberjs-nodejs.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/javascript/2016/12/20/diff-btw-vanilla-js-es-emberjs-nodejs.html</guid>
        
        <category>js</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Swap elements in DOM by drag and drop</title>
        <description>&lt;p&gt;Drag and drop is a very common feature. In which you drag an element and drop it somewhere else.
Drag and drop is a standard feature in HTML5, You can make any element draggable.
Below are the steps on how to achieve the same.
&lt;!--more--&gt;&lt;/p&gt;
&lt;h4 id=&quot;below-is-a-demo-of-the-same-drag-div1-to-div2&quot;&gt;Below is a demo of the same (drag div1 to div2).&lt;/h4&gt;
&lt;div class=&quot;drag-demo&quot;&gt;
  &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
  &lt;script&gt;
    function drag(ev)
    {ev.dataTransfer.setData('target_id',ev.target.id);}
    function allowDrop(ev) {
 	    ev.preventDefault();
 	    }
      function drop(ev) {
        var drop_target = ev.target;
        var drag_target_id = ev.dataTransfer.getData('target_id');
        var drag_target = $('#'+drag_target_id)[0];
        var tmp = document.createElement('span');
        tmp.className='hide';
        drop_target.before(tmp);
        drag_target.before(drop_target);
        tmp.replaceWith(drag_target);
      }
  &lt;/script&gt;
  &lt;div class=&quot;draggable-div&quot; id=&quot;div1&quot; ondrop=&quot;drop(event)&quot; ondragover=&quot;allowDrop(event)&quot; draggable=&quot;true&quot; ondragstart=&quot;drag(event)&quot;&gt;Div 1&lt;/div&gt;
  &lt;div class=&quot;draggable-div light&quot; id=&quot;div2&quot; ondrop=&quot;drop(event)&quot; ondragover=&quot;allowDrop(event)&quot; draggable=&quot;true&quot; ondragstart=&quot;drag(event)&quot;&gt;Div 2&lt;/div&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;first-step-make-the-elements-draggable-we-want-to-drag&quot;&gt;First step: Make the elements draggable we want to drag&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;div1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;draggable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Div 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;div2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;draggable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Div 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;second-step-save-the-id-of-dragged-element&quot;&gt;Second step: Save the id of dragged element&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataTransfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setData&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'target_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;event.dataTransfer&lt;/code&gt; will be available in whole drag and drop event, so it can be used to keep dragged target id.      &lt;br /&gt;
drag function can be called by attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;ondragstart&lt;/code&gt;, which will call drag function passing event as a argument.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;div1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;draggable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ondragstart=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;drag(event)&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Div 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;third-step-allow-element-to-be-dropped-in-other-element&quot;&gt;Third step: Allow element to be dropped in other element&lt;/h2&gt;
&lt;p&gt;By default elemets can’t be dropped in other element, so to prevent this default behaviour
call allowDrop function by attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;ondragover&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allowDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;div1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;draggable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ondragstart=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;drag(event)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ondragover=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;allowDrop(event)&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Div 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;fourth-step-swap-elements-on-dropping-the-element&quot;&gt;Fourth Step: Swap elements on dropping the element&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ondrop&lt;/code&gt; attribute is fired on which a element is dropped, call drop function by &lt;code class=&quot;highlighter-rouge&quot;&gt;ondrop&lt;/code&gt; attribute.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;div1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;draggable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ondragstart=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;drag(event)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ondragover=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;allowDrop(event)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ondrop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;drop(event)&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Div 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In drop function swap drag_target with drop_target to achieve desired result.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drop_target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drag_target_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataTransfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'target_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drag_target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drag_target_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'span'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drop_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drag_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drop_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replaceWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drag_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;drop function code explanation:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;event.preventDefault()&lt;/code&gt; is to prevent default functionality of drop which is to open dropped element as a link.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; event.target&lt;/code&gt; get element on which drop is made.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ev.dataTransfer.getData('target_id')&lt;/code&gt; get id of dragged element from dataTransfer and by id get element.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document.createElement('span')&lt;/code&gt; make dummy span which will help in swapping the elements.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drop_target.before(tmp)&lt;/code&gt; append dummy span before drop_target in dom.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drag_target.before(drop_target)&lt;/code&gt; append drop_target before drag_target in dom.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmp.replaceWith(drag_target)&lt;/code&gt; it will replace dummy span with drag_target.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;code for swaping elements may seem over-conscious for two div’s,   &lt;br /&gt;
But when there are more than two div’s this is the best way to keep track of element’s position.&lt;/p&gt;

&lt;h4 id=&quot;note&quot;&gt;Note&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Make sure your application has jquery loaded.   &lt;br /&gt;
To load jquery add    &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;I have made a typo mistake so that you don’t just copy paste but instead understand the code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;source&quot;&gt;source&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/html/html5_draganddrop.asp&quot; title=&quot;w3schools&quot; target=&quot;_blank&quot;&gt;w3schools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/jquery/2016/10/29/swap-elements-in-dom-by-drag-drop.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/jquery/2016/10/29/swap-elements-in-dom-by-drag-drop.html</guid>
        
        <category>jquery</category>
        
        <category>js</category>
        
        <category>html</category>
        
        <category>dom</category>
        
        
        <category>Jquery</category>
        
      </item>
    
      <item>
        <title>What are the options with which protect_with_forgery is called?</title>
        <description>
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Prevent CSRF attacks by raising an exception.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# For APIs, you may want to use :null_session instead.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :exception&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;What happens if the token is missing or wrong&lt;/strong&gt; depends on the option with
 which protect_from_forgery method is called.   &lt;br /&gt;
 In Rails there are three options: Throw an exception, create a new session or clear the current session.
&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery with: :null_session&lt;/code&gt; (dafault option)
 Set all values to nil in all cookies, including the session.
 That means the user won’t be logged in anymore for that action and
can’t perform the change (if the action requires a signed in user).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery with: :reset_session&lt;/code&gt;
Rails set a new cookie with empty session in browser.That means the user won’t be logged in anymore.   &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;small hack&lt;/code&gt; If user copies old cookie before forgery attack, he can reset user session after attack.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery with: :exception&lt;/code&gt; Raises an ActionController::InvalidAuthenticityToken exception.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a user related rails application &lt;code class=&quot;highlighter-rouge&quot;&gt;with: :null_session&lt;/code&gt; is adviced&lt;/p&gt;

&lt;p&gt;We may want to disable CSRF protection for APIs since they are typically designed to be state-less.
 That is, the request API client will handle the session for you instead of Rails.&lt;/p&gt;

&lt;p&gt;Else the nature of your app decides which option is best.&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/ruby/2016/10/29/protect-from-forgery-options.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/ruby/2016/10/29/protect-from-forgery-options.html</guid>
        
        <category>ruby</category>
        
        <category>csrf</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>How to add csrf in Ember app</title>
        <description>&lt;h2 id=&quot;what-if-im-using-rails-as-api-so-my-frontend-is-seperated-from-rails-can-i-still-prevent-csrf-and-how&quot;&gt;What if i’m using rails as api, so my frontend is seperated from rails can i still prevent csrf and how?&lt;/h2&gt;

&lt;p&gt;So lets take an example where we use ember for frontend and rails as api.
In this case, apart from adding &lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery in application controller&lt;/code&gt; you have to do additional &lt;strong&gt;three things&lt;/strong&gt;.  &lt;br /&gt;
&lt;strong&gt;One&lt;/strong&gt; you have to add the following code in application controller:
&lt;!--more--&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;after_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_csrf_token&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;protected&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_csrf_token&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xhr?&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Add the newly created csrf token to the page headers&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# These values are sent on 1 request only&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'X-CSRF-Token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form_authenticity_token&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here we are sending the newly generated &lt;code class=&quot;highlighter-rouge&quot;&gt;form_authenticity_token&lt;/code&gt; in the response of xhr request(ajax- XMLHttpRequest)   &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;request.xhr?&lt;/code&gt; is to ensure that it is ajax request, we would not want to send the token to any other request right.
&lt;br /&gt;&lt;strong&gt;Two&lt;/strong&gt; you have to set this new token in meta tag by extracting it from the response.
&lt;br /&gt;&lt;strong&gt;Third&lt;/strong&gt; you will send csrf token in the request header by extracting it from the meta tag.   &lt;br /&gt;
you can achieve two and three by adding following code in &lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt; of ember&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajaxPrefilter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originalOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'meta[name=&quot;csrf-token&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setRequestHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'X-CSRF-Token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajaxComplete&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;csrf_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getResponseHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'X-CSRF-Token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;csrf_token&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'meta[name=&quot;csrf-token&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;csrf_token&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;why-change-csrf-token-in-header-on-every-post-request-and-not-only-when-session-changes&quot;&gt;Why change csrf token in header on every post request and not only when session changes?&lt;/h2&gt;

&lt;p&gt;If it were to change token only when session changes there would be an extra overhead to trigger session change and then generate csrf token and set in header.
It is a lot easier to randomally generate csrf token using &lt;code class=&quot;highlighter-rouge&quot;&gt;session[:_csrf_token]&lt;/code&gt; on every post request.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Aug 2016 21:21:58 +0530</pubDate>
        <link>http://rajatsingla.in/ruby/2016/08/06/how-to-add-csrf-in-ember-app.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/ruby/2016/08/06/how-to-add-csrf-in-ember-app.html</guid>
        
        <category>ruby</category>
        
        <category>csrf</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Sessions and csrf in rails.</title>
        <description>&lt;p&gt;Most apps need to be able to store some data about a user. Maybe it’s a user id, or a preferred language.
session is the perfect place to put this kind of data.
Little bits of data you want to keep around for more than one request.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sessions&lt;/code&gt; are easy to use:
&lt;!--more--&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:current_user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;what-is-a-session&quot;&gt;What is a session?&lt;/h2&gt;

&lt;p&gt;&lt;b&gt;A session is just a place to store data during one request that you can read during later requests.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;You can set some data in a controller action:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;app/controllers/sessions_controller.rb&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:current_user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And read it in another:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;app/controllers/users_controller.rb&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:current_user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It might not seem that interesting.
But it takes coordination between your user’s browser and
your Rails app to make everything connect up.
And it all starts with &lt;code class=&quot;highlighter-rouge&quot;&gt;cookies&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;cookie&quot;&gt;Cookie?&lt;/h2&gt;
&lt;p&gt;When you request a webpage, the server can set a cookie when it responds back. &lt;br /&gt;
Your browser will store those cookies.
And until the cookie expires,
every time you make a request,
your browser will send the cookies back to the server.
&lt;b&gt;This cookie contains your rails session you have been using.&lt;/b&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;cross-site-request-forgery&quot;&gt;Cross-Site Request Forgery&lt;/h2&gt;
&lt;p&gt;Lets say you are logged in on gmail.com and in
another tab you have opened a hacker’s website. Which is urging you to
click a image saying you will get 100 coins. But actually it will send a
request to gmail.com deleting all mails. This request will be successful
 because browser will send cookie along with the request
 and in this cookie your current gmail session exists.&lt;/p&gt;

&lt;h2 id=&quot;how-to-prevent-csrf&quot;&gt;How to prevent CSRF?&lt;/h2&gt;
&lt;p&gt;Synchronizer token pattern (STP) is a technique where a token, secret and unique value for each request, is embedded by the web application in all HTML forms and verified on the server side.&lt;/p&gt;

&lt;h2 id=&quot;how-does-the-token-look-like&quot;&gt;How does the token look like?&lt;/h2&gt;
&lt;p&gt;The token will be added automatically to every form like this:   &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input name=&quot;authenticity_token&quot; type=&quot;hidden&quot; value=&quot;OXuQV+9Q1hi5YkeynLQgVddCRfdUwl0huvqSjoqf4mE=&quot; /&amp;gt;.&lt;/code&gt;  &lt;br /&gt;
The same token is in user’s session. On every request the token in session and the token in HTML form are compared on the server side and if they match
only then the request is completed.&lt;strong&gt;The purpose of the token is that an attacker doesn’t know the victim’s
token and thus a CSRF attack without that token would be refused.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;protect-csrf-in-rails-app&quot;&gt;Protect CSRF in Rails app&lt;/h2&gt;
&lt;p&gt;The CSRF protection can be turned on with the &lt;code class=&quot;highlighter-rouge&quot;&gt;protect_from_forgery&lt;/code&gt; controller method  and is included in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationController&lt;/code&gt; by default.
So for every non-GET (and non-HEAD) action Rails will check the authenticity token.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Prevent CSRF attacks by raising an exception.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# For APIs, you may want to use :null_session instead.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :exception&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;source: &lt;br /&gt;
&lt;a href=&quot;http://www.rorsecurity.info/&quot;&gt;http://www.rorsecurity.info/&lt;/a&gt;
&lt;br /&gt;
&lt;a href=&quot;http://www.justinweiss.com/articles/how-rails-sessions-work/&quot;&gt;http://www.justinweiss.com/articles/how-rails-sessions-work/&lt;/a&gt;
&lt;br /&gt;
&lt;a href=&quot;http://guides.rubyonrails.org/security.html&quot;&gt;http://guides.rubyonrails.org/security.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Aug 2016 21:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/ruby/2016/08/04/session-and-csrf-in-rails.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/ruby/2016/08/04/session-and-csrf-in-rails.html</guid>
        
        <category>ruby</category>
        
        <category>session</category>
        
        <category>csrf</category>
        
        <category>cookie</category>
        
        
        <category>ruby</category>
        
      </item>
    
      <item>
        <title>Modules vs Classes in Ruby</title>
        <description>&lt;p&gt;A &lt;strong&gt;Module&lt;/strong&gt; is a collection of methods and constants. The methods in a module may be instance methods or module methods. Instance methods appear as methods in a class when the module is included, module methods do not. Conversely, module methods may be called without creating an encapsulating object, while instance methods may not. (See &lt;code class=&quot;highlighter-rouge&quot;&gt;Module#module_function&lt;/code&gt;.)
&lt;!--more--&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the descriptions that follow, the parameter sym refers to a symbol, which is either a quoted string or a Symbol (such as &lt;code class=&quot;highlighter-rouge&quot;&gt;:name&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;CONST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;meth&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#  ...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; Module&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constants&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [:CONST, :PI, :E]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_methods&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [:meth]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  constants → array
  constants(inherited) → array
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the first form, returns an array of the names of all constants accessible from the point of call. This list includes the names of all modules and classes defined in the global scope.&lt;/p&gt;

&lt;p&gt;source: &lt;a href=&quot;http://ruby-doc.org/core-2.2.0/Module.html&quot; title=&quot;link to ruby doc&quot;&gt;http://ruby-doc.org/core-2.2.0/Module.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jul 2016 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.in/ruby/2016/07/28/module-vs-class.html</link>
        <guid isPermaLink="true">http://rajatsingla.in/ruby/2016/07/28/module-vs-class.html</guid>
        
        
        <category>ruby</category>
        
      </item>
    
  </channel>
</rss>
